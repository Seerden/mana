# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type List {
  created_at: Float!
  from_language: String!
  last_reviewed: Float
  list_id: Float!
  name: String!
  terms(populate: Boolean, user_id: Float!): [Term]!
  to_language: String!
  user_id: Float!
}

type ListAndTerms {
  list: List!
  terms: [Term]!
}

input ListUpdatePayloadInput {
  name: String!
}

type MaybeList {
  error: String
  list: List
}

type Message {
  message: String!
}

type Mutation {
  createList(newList: NewListInput!, user_id: Float!): ListAndTerms!
  createTerms(terms: [NewTermInput!]!): [Term!]!
  createUser(password: String!, username: String!): User!
  deleteList(listIds: [Int!]!, user_id: Float!): ListAndTerms!
  deleteTerms(termIds: [Int!]!): [Term!]!
  login(password: String!, username: String!): User!
  logout: Message!
  updateList(list_id: Float!, payload: ListUpdatePayloadInput!, user_id: Float!): MaybeList!

  """Update a user's password"""
  updatePassword(password: String!, user_id: Float!): User!

  """Update a user's username"""
  updateUsername(user_id: Float!, username: String!): User!
}

input NewListInput {
  from_language: String!
  name: String!
  terms: [NewTermInput!]!
  to_language: String!
  user_id: Float!
}

input NewTermInput {
  from_language: String!
  from_value: String!
  list_id: Int!
  to_language: String!
  to_value: String!
  user_id: Int!
}

type Query {
  listsById(ids: [Int!]!): [List!]!
  listsByUser(user_id: Float!): [List!]!
  me: User!
  users: [User!]!
}

type Term {
  from_language: String!
  list_id: Float!
  term_id: Float!
  to_language: String!
  user_id: Float!
}

type User {
  created_at: Int!
  password: String!
  user_id: Float!
  username: String!
}
